<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAkGBxQTEhQUExQUFRUXFBQXFBcUFBQXFxQUFRUXFxQUFxQY
        HCggGBwlHBQXITEhJSkrLi4uFx8zODMsNygtLiz/2wBDAQoKCg4NDhoQEBosJB8cLCwsLCwsLCwsLCws
        LCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCz/wAARCADCAQQDASIAAhEBAxEB/8QA
        GgAAAwEBAQEAAAAAAAAAAAAAAQIDAAQFBv/EAC4QAAICAQIFAwMEAwEBAAAAAAABAhEDITESQVFh8BNx
        gQSh0ZGxwfEiQuEyFP/EABoBAQEBAQADAAAAAAAAAAAAAAECAAMEBQb/xAAcEQEBAQADAQEBAAAAAAAA
        AAAAARECEiExQVH/2gAMAwEAAhEDEQA/APqVqtQrJWhGUmvb7Cps+Ze6xaic4FYTvzoaTtaDoc8thMa3
        v7FpxfQfHgrX7DqtJw+UXww8YZRbqrL4cTW9fAai1N4FQnp9DsnF9BfQdBqdcsHyKcNd6KPDsUnCqt/C
        Np1oQ7/8NWm5SOJ1sb0a+Q1IqCrcKpdzQjQXDtv3MNNGN+ch4w7iY8ff4/cdySKFI7ews4UF5qQuOV6y
        2J3T6VO/jcMeoYwVuiscXXzUzDhyoeMl9uZGMavXzuMo9fsh0E+o7a7bnNKR1Z47aWcbxLRrbnr/AAYw
        YxTKr3JqGt6jJNPYIok9eRzZof0dcn+vQ5cldfPwJjmcdb5/sGapDrfQXMtPwGrCCXMwILywCS5ny17i
        +k2/g63ibWlX11FUWlbX6a/0bRqOOktEWc1Vml9M5K1aIyxSjunWpm+qLXUvjx6b/qcqVLf4L456a7i1
        PCTUjqjPbRM5JSO7FtQI5OrHLTZGWO/NyKXf4OmEXwhuudJwpE3C2vsWxx1KbPTmDFxR0FcfsWjSDa2E
        OJzptlUr19hnFBb8oIaCw6aL9TYsC30L45aEE1xVW/b+Ssg2uf6jGuXTsLH8WvNiv1WRJUkCOlOteaS1
        DFS+Lwx9iij1/buUwa/9KTiisRb653gRLga6di8nqFRsnG1zzi7JSidcsL3sjPG+hrpjljHe1f6ElDlW
        nwdcocxI79PY0VrinBW3W7/onkg275HbnhTrsc8sToy5UopJfuBpP5Ao0+XYpLVV4vkkuORi6h2MdZ8O
        r1e2hlBvmPkTSRPDaOQHga0v4f5Eyvt+mp0SWw3prt3K0a4IxV6PUvLBaHliRWHTcW1zYsHVM6IRa82H
        hO9vkeUOrBtpXd/J1LJoQVckykcV9gRVb2oEidVzYY22ZlUZRDh1OmGMZE24hCA3B3OqMEDgHqjs422F
        z20R0vGI8QZYdlccMVt68+Y3pVtRaKSYbS3N+HWx6DymmFyXYnOOvQQnw6j4wRiGjQ1SU0JkhfMLuhFk
        tD9gSydPPcEsarr1LSVmliTN+q1xyjdkJR1O2WPv7aEJx11JVK48mPUSK6HVlx6gx4yV64v8uoC8sPia
        AJ1d5dBISTZpY2+WvXsIotcvOwB3TxkUtyccjSWhT6W3qNqcxVRAmtttSiXYbEhAwwVrpf7meKx5rQbF
        fWxGpxh2Kwx0UhEaRsTqXo3uJ/8AKn2pnUFaDJBqEcNM6MZgpDBadAZkNQoK5E5otw6CMLDHP6O75kVF
        c1bOvgYskl7kWLlSbFlPdFI47A/p0b0+FS03HrbUyxGlFlQVmk9DKJNxd7j8xY8YBaGTA5AEpRs55xOt
        E8sUCpXFKInBWqOqSsE4LoSvXHS8RjomjG06nCQ0oOgVp1bBwNgwRwt7896Gw41FfnudWCHYXJFbMcHY
        nC/ORfFGkrNBVSKCm0jjrp4iihQ8IFGipE2khFchvTHiqGL6o1JRG4RwM2NqQbC0NQYdBMoIOmVE0E2J
        OJVBSNng1zxTe4VjRdRFaJ6nsXhQOAY1leMFCNFbEcRrSpNAUSvCAnFSptCWVmSIsMaTFaseg2CtQlCw
        LE9bY05MbH3MdScTHRwGIvEdnkxlZ243SOKEl30OlT/BpXSularb+iccfOxMck9bv2Hg+n9FIUmvP5Gx
        AlNLmTWfW4237PUpLtiYnDLprv30Cp2VqMUUjOZLiMkHY4q5GsmmOoj9GGiPQkSiKgqdBkwZUaKCsCZX
        GxKHgM+im1JsrIjM3IcWMiXExoomVeKJgY0YCyRd+J0GYzYFMCXIifCVnIRNEX6uF2EnIdslKibVRm9R
        kJXMXJJ7AXTGehjjjPrfnyY1o6uTBFcyrdvR6Lzc5FPt57HVBWQ6VTHb0S/kq3utqNjqOhTgT1KiKhGD
        fudEE9v1Y2OKG4bLFrem3vRvTaKJoLkVkRtQqgruUlNAUQz+HTookIh6OsRRcRotCNgTNvoxSSFodMEj
        UQrQUMoaC8ANrGCahYlDqAUZjI1p1EnJBC0VfUxFom4osLJHLlHSVNomVaFo52eriUhOG2W4RWqBULPE
        JwMpGRuIzehwmMmwnSTYzxti8E6sEcZaK0PHdbWiWjPU543dLYpKNUMTXUp9Q5GRspWheoGxVn5Ga0Jw
        x62ByKN2NTsSC1LxiVJqbcVgi0YkXIqpbHbjXKi4kWWUhJI3IQrb0ApBYvCc6uOj1egspk6HUSu1qckB
        swWJJmMPZnMjYGbW6q+oZ5ScGjM3anrDqRpTEYOwdmwzYljWBoiqgInkeg8iWWVbslUJLIJGWhGctXro
        zXy5dwXjoUzEuHuY054MTjPqO2nsST0oaGgFZQ0M58hXlSQFkTEHxsrGfJnPKXQpBfqZrF4sKRNbh9XW
        ikqItFEEUhIZU1VqycUxmwcRexJ8bHoRIKkUGkha1DxAjLqT4wuQ6FVDWIrNitGlMk8prYZBaFfQKYk5
        E2rBSodnPlQOPSidOLvJoT9XvRF5LGVJdzHFXk82DPJ5qcvGCeUnT1Wc/KIfUO+4izWJlmFVIpBrogZM
        n7kIZGOq50a1WG4rMJ6nRfcxws9bE55BouzlWmpSE+x1bFJvxmxZ/wDXS/YWU+QmV9degF3QypnTBJ/y
        eP8AT9tPc9P6fJWlF8Uco6fTAojQmPJdy8c0o6Mqic2TlM18bHTx9DWc0ZFceUJWxZyMsgk9RI/YrRIt
        GQSdDwMDpGdjWBsoIzsk5nRJiNWRipUVkBYs8Vcxa8YL8aeTqTUh7XL5A4oxheMPHpqTq32Hxxp6+IzB
        kRz5snn/AA6MskcP1IX6rirhVv2J5sjq+g2J6fBOXT+ehFUXj2KeolVsXhJ5oK+waVXlX9GIKfUxXWU4
        nOaL8l3OLh2O2EqMKvjhp0BlaqhITsGaGvXrZKVcMTtxwObG06R140XE08grICUicn0G0HeV7chTcOgj
        TDWUiysBIr9huOtBiao5hUCOORbHLeiommRnIwiika1lVkDZFLUZyN2bFDJCcRmxlAuJz51ReUiGWVmq
        o5fU3/BPfbT3KzVslJUc3RSxJ5Gifq8gTfQDhrfb2QXFSExx5tloKjNQWNL/AKJKmTzSE9Vm0yDLsKpI
        0ct+bAVX1JUWcUYWUu5hl8ZyKVV5R04pOuqObHj7+ex3YsfMWrYo0bI9NwLLuaTVWSD/AE0679i+LKcO
        KXT5/A0slDGzXbPM+uhaEtDgxanUlWwpsVUysZJnPKd6fwNGYB0IlKLbYYZlRfiXuXE3xKO9F+EldDqV
        piDKVLTUXHMRx3Itunpr7afoY46ZZFaWo0rOf6ZPS2Vgnb106cjA3Ew+oSyyJZMmn5C+GRWcxHIm5jKH
        MNOM51Zk0xJ1VdRYT1oxNkxquhnDSwTnyDen2oGc85O/20Jqb9uhXLLzqc2aD+AXCyz6VuJLMrrs9xFH
        fmTniFckLOeu+/Qria31v3OeUkr79RH9SkOHNdM0r2b+QnJH6pPZmJunrXa+XnMfJLf2AYXKk5jt6P3Y
        DATx/AzX+LMYzRsR6GHz9AmGJ5J5FqxpGMSDYykFp8mMVE1aOzFQTFUKQOLM9fkxhrRSH4/cotzGD+N+
        n+o2Xuc+bZGMbk3FGL0Ky/8AJjEw1CXL4HxbmMCvwv8At8m+r2AYzDP/AMo58j/xRjD+EjWjIfV/x+DG
        BcceXY5kjGLjrDY1ojGMbl9U/9k=
</value>
  </data>
  <data name="pictureBox5.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhZABkAIABAAAAAP///yH/C05FVFNDQVBFMi4wAwEAAAAh/hFDcmVhdGVkIHdpdGggR0lNUAAh
        +QQJMgABACwAAAAAZABkAAAC/oSPqcvtD6OctNpbg9684w9i3UiW4Yka5cqS6Ru18hzAtkLn7c3rPstL
        /Ya74IWITP6OyqYTmHlKp5ap9Rm9aonVrVfX/YqLlLF5FT6rNcy1uu02w+PiOd1rv2vzeiu/L/UH6CQ4
        qFRoiISYOLTI6OP4mBMpOUNZSVaGSZi2qdjp2QgaCjlKOml6apmqminRypUFCyY7S1NruzqRW7rLi/r6
        CxwjfOtbLKOJ7PqwnBzsDEUcjQZNbTJ97ZKt7QHRXd0Mvi0+7l1uvsGdvm7ePv4OHt89T++QTs4QCDCi
        os7PwR+bBfsa7OsHcKC3gASx3HOIkOHCf3gecopIUWLGhj3okgjcWCOhQpB+On7SR/IjSk4WDxlMKXJl
        k28XJ44E+bFkS48ib4a0+XMLzZk9g/o0ilTnzlgYByY8oFGoSVFNnSI4l4DK1CVFc4aEivVqwaXuhuL7
        ShZevWtrqbWNZo3dW2dzl8Uta1ZuXrx75d3129bIiWeCCxs+jDix4sWMGzt+HKQAACH5BAkyAAEALAAA
        AABkAGQAAAL+hI+py+0Po5y02luD3rzjD2LdSJbhiRrlypLpG7XyHMC2Quftzes+y0v9hrvghYhM/o7K
        phOYeUqnlqn1Gb1qidWtV9f9iouUsXkVPqs1zLW67TbD4+I53Wu/a/N6K78v9QfoJDioVGiIhJg4tMjo
        4/iYEyk5Q1lJVoZJmLap2OnZCBoKOUo6aXpqmaqaKdHKlQULJjtLU2u7OpFbusuL+voLHCN861sso4ns
        +rCcHOwMRRyNBk1tMn3tkq3tAVGp4s0RvkFew3pnzgYwzt7ejjuofv5evw7vAO5uT89vzm1o3r9998oR
        BCivAb9+6+IBymdQnEGHfQQeJMgwI8K7hxg1YhyIT6EkiwtBhsShb8TAfQdKQuSk8qLEhgkynqt58huW
        jiYjTqxpsaU3ZU1I+jxqk8rLojxl+usYqBnMmTZ7XtHJlIHLnFBjLU2yVN1KnJy+foq5FakfqUzRqrW6
        1mwstwWRzovKFmxTeBMXxhV5aG/OoWTLAtZL92dTlDvzdiN8+DHXwpIVR658U67kjY+tYfb8GStmmpq7
        gd7MWdux0Kmpra5mBMSz2LRr276NO7fu3bx7+w5SAAA7
</value>
  </data>
</root>